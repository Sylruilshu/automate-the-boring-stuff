Question 1.
openpyxl.load_workbook() returns a workbook object.

Question 2.
workbook.sheetnames attribute contains a list of worksheet objects.

Question 3.
workbook = openpyxl.load_workbook("example.xlsx")
sheet = workbook["Sheet1"]

Question 4.
workbook = openpyxl.load_workbook("example.xlsx")
sheet = workbook.active

Question 5.
workbook = openpyxl.load_workbook("example.xlsx")
sheet = workbook.active
sheet["C5"].value
or
sheet.cell(row=5, column=3).value

Question 6.
sheet["C5"].value = "Hello"
or
sheet.cell(row=5, column=3).value = 'Hello'

Question 7.
b2 = sheet["B2"]
b2.row and b2.column

Question 8.
sheet.max_row && sheet.max_column hold integers corresponding to the total rows or columns with values contained in the worksheet object.

Question 9.
column_index_from_string("M")

Question 10.
get_column_letter(14)

Question 11.
workbook = openpyxl.load_workbook("example.xlsx")
sheet = workbook.active
tuple(sheet["A1":"F1"])

Question 12.
workbook.save("example.xlsx")

Question 13.
sheet["A1"] = "=SUM(A1:B1)"

Question 14.
Pass True as the keyword argument to load_workbook()

Question 15.
sheet.row_dimensions[5].height = 100

Question 16.
sheet.column_dimensions["C"] = 0
or
sheet.column_dimensions['C'].hidden = True

Question 17.
Rows or columns that are frozen in place, that do not move when scrolling through excel worksheets are known as freeze panes.

Question 18.
1. Create Reference object using;
    reference_object = openpyxl.chart.Reference()
2. Creat Series object by passing in the Reference object;
    series_object = openpyxl.chart.Series(ref_object, title="")
3. Create a Chart object using;
    chart_object = openpyxl.chart.BarChart()
4. Append the Series object to the Chart object;
    chart_object.append(series_object)
5. Add the Chart object to the Sheet object;
    sheet.add_chart(chart_object, 'C5')